name: SAST and DAST scan using GH Actions

on:
  push:
    branches: ['main']

jobs:
  sast-and-dast:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
      security-events: write

    steps:
      # 1️⃣ Checkout code
      - name: Checkout the code
        uses: actions/checkout@v4

      # 2️⃣ Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      # 3️⃣ Set up Snyk
      - name: Set up Snyk
        uses: snyk/actions/setup@0.4.0

      # 4️⃣ Install dependencies
      - name: Install dependencies
        run: |
          if [ -f $GITHUB_WORKSPACE/requirements.txt ]; then
            pip install -r $GITHUB_WORKSPACE/requirements.txt
          else
            echo "No requirements.txt found, installing Flask manually"
            pip install flask
          fi

      # 5️⃣ Snyk OSS Scan
      - name: Snyk OSS
        run: snyk test --sarif-file-output=snyk-oss.sarif
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        continue-on-error: true

      # 6️⃣ Snyk Code Scan (SAST)
      - name: Snyk Code (SAST)
        run: snyk code test --sarif-file-output=snyk-code.sarif
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        continue-on-error: true

      # 7️⃣ Upload SARIF files (CodeQL)
      - name: Upload Snyk Code SARIF
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk-code.sarif
        continue-on-error: true

      - name: Upload Snyk OSS SARIF
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk-oss.sarif
        continue-on-error: true

      # 8️⃣ Launch Flask app
      - name: Launch app
        run: |
          nohup python vuln_app.py &
          sleep 15

      # 9️⃣ OWASP ZAP DAST Scan
      - name: ZAP Scan
        uses: zaproxy/action-baseline@v0.14.0
        continue-on-error: true
        with:
          token: ${{ secrets.ZAP }}         
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
          target: 'http://127.0.0.1:5000'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'
          allow_issue_writing: false        # <- düzgün input
